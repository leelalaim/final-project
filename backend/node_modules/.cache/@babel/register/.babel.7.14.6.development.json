{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/mm/Development/technigo/final-project/final-project/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mm/Development/technigo/final-project/final-project/backend\",\"filename\":\"/Users/mm/Development/technigo/final-project/final-project/backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mm/Development/technigo/final-project/final-project/backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/mm/Development/technigo/final-project/final-project/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mm/Development/technigo/final-project/final-project/backend",
      "filename": "/Users/mm/Development/technigo/final-project/final-project/backend/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/mm/Development/technigo/final-project/final-project/backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mm/Development/technigo/final-project/final-project/backend/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mm/Development/technigo/final-project/final-project/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mm/Development/technigo/final-project/final-project/backend/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _cloudinary = _interopRequireDefault(require(\"cloudinary\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _multerStorageCloudinary = _interopRequireDefault(require(\"multer-storage-cloudinary\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_dotenv[\"default\"].config();\n\nvar cloudinary = _cloudinary[\"default\"].v2;\ncloudinary.config({\n  cloud_name: 'mmolliss',\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET\n});\nvar storage = (0, _multerStorageCloudinary[\"default\"])({\n  cloudinary: cloudinary,\n  params: {\n    folder: 'projectImage',\n    allowedFormats: ['jpg', 'png'],\n    transformation: [{\n      width: 500,\n      height: 500,\n      crop: 'limit'\n    }]\n  }\n});\nvar parser = (0, _multer[\"default\"])({\n  storage: storage\n});\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/bootcamp-projects';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //Schemas\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  email: {\n    type: String,\n    unique: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email address']\n  },\n  password: {\n    type: String // required: true,\n\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n}); //Connect logged in user to uploaded project\n\nvar projectSchema = new _mongoose[\"default\"].Schema({\n  email: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'User',\n    // required: true,\n    trim: true,\n    validate: {\n      validator: function validator(value) {\n        return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n      },\n      message: 'Please, enter a valid email'\n    }\n  },\n  bootcamp: {\n    type: String // required: true,\n\n  },\n  projectName: {\n    type: String\n  },\n  url: {\n    type: String\n  },\n  stack: {\n    type: String\n  },\n  // hearts: {\n  //   type:\n  // },\n  description: {\n    type: String\n  },\n  week: {\n    type: String\n  },\n  projectImage: String,\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n}); //Models\n\nvar Project = _mongoose[\"default\"].model('Project', projectSchema);\n\nvar User = _mongoose[\"default\"].model('User', userSchema);\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json()); //Paths\n\napp.get('/', function (req, res) {\n  res.send('Hello World');\n}); //MVP\n\napp.get('/projects', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$query, bootcamp, stack, week, query, data;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$query = req.query, bootcamp = _req$query.bootcamp, stack = _req$query.stack, week = _req$query.week;\n            query = {};\n\n            if (bootcamp) {\n              query.bootcamp = bootcamp;\n            }\n\n            if (stack) {\n              query.stack = stack;\n            }\n\n            if (week) {\n              query.week = week;\n            }\n\n            _context.prev = 5;\n            _context.next = 8;\n            return Project.find(query).sort({\n              createdAt: -1\n            });\n\n          case 8:\n            data = _context.sent;\n            res.json(data);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            res.status(400).json({\n              error: 'Oops, no luck with that filter',\n              details: _context.t0\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //MVP\n\napp.post('/upload', parser.single('image'), /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, url, projectName, bootcamp, description, week, stack, newProject;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, url = _req$body.url, projectName = _req$body.projectName, bootcamp = _req$body.bootcamp, description = _req$body.description, week = _req$body.week, stack = _req$body.stack;\n\n            try {\n              newProject = new Project({\n                projectName: projectName,\n                url: url,\n                bootcamp: bootcamp,\n                stack: stack,\n                description: description,\n                week: week,\n                projectImage: req.file && req.file.path || '' // projectImage: req.file.path,\n\n              });\n              newProject.save();\n              res.status(200).json(newProject);\n            } catch (err) {\n              res.status(400).json({\n                message: 'Could not save',\n                errors: err\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //Sign Up\n\napp.post('/signup', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var salt, _req$body2, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            salt = _bcryptNodejs[\"default\"].genSaltSync();\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return User.findOne({\n              email: email\n            });\n\n          case 5:\n            user = _context3.sent;\n\n            if (!user) {\n              _context3.next = 9;\n              break;\n            }\n\n            res.status(403).json({\n              errorCode: 'E-mail is already in use',\n              message: 'A user with that e-mail already exists'\n            });\n            return _context3.abrupt(\"return\");\n\n          case 9:\n            user = new User({\n              email: email,\n              password: _bcryptNodejs[\"default\"].hashSync(password, salt)\n            });\n            user.save();\n            res.status(201).json({\n              id: user._id,\n              accessToken: user.accessToken,\n              email: user.email\n            });\n            _context3.next = 17;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](2);\n            res.status(400).json({\n              errorCode: 'uknown-error',\n              message: 'Could not create user',\n              error: _context3.t0\n            });\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 14]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // Log In\n\napp.post('/login', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return User.findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context4.sent;\n\n            if (user) {\n              _context4.next = 8;\n              break;\n            }\n\n            res.status(401).json({\n              errorCode: 'E-mail not registered',\n              message: 'Invalid credentials'\n            });\n            return _context4.abrupt(\"return\");\n\n          case 8:\n            if (_bcryptNodejs[\"default\"].compareSync(password, user.password)) {\n              _context4.next = 11;\n              break;\n            }\n\n            res.status(401).json({\n              errorCode: 'Incorrect Password',\n              message: 'Invalid credentials'\n            });\n            return _context4.abrupt(\"return\");\n\n          case 11:\n            res.json({\n              id: user._id,\n              email: user.email,\n              password: user.password,\n              accessToken: user.accessToken\n            });\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.status(400).json({\n              errorCode: 'uknown-error',\n              message: 'Invalid request',\n              error: _context4.t0\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 14]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //Just for development\n\napp.get('/users', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var users;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return User.find();\n\n          case 2:\n            users = _context5.sent;\n            res.json(users);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  // eslint-disable-next-line\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "cloudinary",
        "cloudinaryFramework",
        "v2",
        "cloud_name",
        "api_key",
        "process",
        "env",
        "CLOUDINARY_API_KEY",
        "api_secret",
        "CLOUDINARY_API_SECRET",
        "storage",
        "params",
        "folder",
        "allowedFormats",
        "transformation",
        "width",
        "height",
        "crop",
        "parser",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useCreateIndex",
        "Promise",
        "userSchema",
        "Schema",
        "email",
        "type",
        "String",
        "unique",
        "match",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "projectSchema",
        "Types",
        "ObjectId",
        "ref",
        "trim",
        "validate",
        "validator",
        "value",
        "test",
        "message",
        "bootcamp",
        "projectName",
        "url",
        "stack",
        "description",
        "week",
        "projectImage",
        "createdAt",
        "Date",
        "now",
        "Project",
        "model",
        "User",
        "port",
        "PORT",
        "app",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "send",
        "query",
        "find",
        "sort",
        "data",
        "status",
        "error",
        "details",
        "post",
        "single",
        "body",
        "newProject",
        "file",
        "path",
        "save",
        "err",
        "errors",
        "salt",
        "bcrypt",
        "genSaltSync",
        "findOne",
        "user",
        "errorCode",
        "hashSync",
        "id",
        "_id",
        "compareSync",
        "users",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/mm/Development/technigo/final-project/final-project/backend/",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport crypto from 'crypto';\nimport bcrypt from 'bcrypt-nodejs';\nimport dotenv from 'dotenv';\nimport cloudinaryFramework from 'cloudinary';\nimport multer from 'multer';\nimport cloudinaryStorage from 'multer-storage-cloudinary';\n\ndotenv.config();\nconst cloudinary = cloudinaryFramework.v2;\ncloudinary.config({\n  cloud_name: 'mmolliss',\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nconst storage = cloudinaryStorage({\n  cloudinary,\n  params: {\n    folder: 'projectImage',\n    allowedFormats: ['jpg', 'png'],\n    transformation: [{ width: 500, height: 500, crop: 'limit' }],\n  },\n});\n\nconst parser = multer({ storage });\n\nconst mongoUrl =\n  process.env.MONGO_URL || 'mongodb://localhost/bootcamp-projects';\nmongoose.connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\nmongoose.Promise = Promise;\n\n//Schemas\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    match: [\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Please enter a valid email address',\n    ],\n  },\n  password: {\n    type: String,\n    // required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex'),\n  },\n});\n\n//Connect logged in user to uploaded project\nconst projectSchema = new mongoose.Schema({\n  email: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    // required: true,\n    trim: true,\n    validate: {\n      validator: (value) => {\n        return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n      },\n      message: 'Please, enter a valid email',\n    },\n  },\n  bootcamp: {\n    type: String,\n    // required: true,\n  },\n  projectName: {\n    type: String,\n  },\n  url: {\n    type: String,\n  },\n  stack: {\n    type: String,\n  },\n  // hearts: {\n  //   type:\n  // },\n  description: {\n    type: String,\n  },\n  week: {\n    type: String,\n  },\n  projectImage: String,\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n//Models\nconst Project = mongoose.model('Project', projectSchema);\nconst User = mongoose.model('User', userSchema);\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\n//Paths\napp.get('/', (req, res) => {\n  res.send('Hello World');\n});\n\n//MVP\napp.get('/projects', async (req, res) => {\n  const { bootcamp, stack, week } = req.query;\n\n  const query = {};\n  if (bootcamp) {\n    query.bootcamp = bootcamp;\n  }\n\n  if (stack) {\n    query.stack = stack;\n  }\n\n  if (week) {\n    query.week = week;\n  }\n\n  try {\n    const data = await Project.find(query).sort({ createdAt: -1 });\n\n    res.json(data);\n  } catch (error) {\n    res\n      .status(400)\n      .json({ error: 'Oops, no luck with that filter', details: error });\n  }\n});\n\n//MVP\napp.post('/upload', parser.single('image'), async (req, res) => {\n  const { url, projectName, bootcamp, description, week, stack } = req.body;\n  try {\n    const newProject = new Project({\n      projectName: projectName,\n      url: url,\n      bootcamp: bootcamp,\n      stack: stack,\n      description: description,\n      week: week,\n      projectImage: (req.file && req.file.path) || '',\n      // projectImage: req.file.path,\n    })\n    newProject.save();\n    res.status(200).json(newProject);\n  } catch (err) {\n    res.status(400).json({ message: 'Could not save', errors: err });\n  }\n});\n\n//Sign Up\napp.post('/signup', async (req, res) => {\n  const salt = bcrypt.genSaltSync();\n  const { email, password } = req.body;\n\n  try {\n    let user = await User.findOne({\n      email,\n    });\n    if (user) {\n      res.status(403).json({\n        errorCode: 'E-mail is already in use',\n        message: 'A user with that e-mail already exists',\n      });\n      return;\n    }\n\n    user = new User({\n      email,\n      password: bcrypt.hashSync(password, salt),\n    });\n    user.save();\n    res\n      .status(201)\n      .json({ id: user._id, accessToken: user.accessToken, email: user.email });\n  } catch (error) {\n    res.status(400).json({\n      errorCode: 'uknown-error',\n      message: 'Could not create user',\n      error,\n    });\n  }\n});\n\n// Log In\napp.post('/login', async (req, res) => {\n  const { email, password } = req.body;\n  try {\n    const user = await User.findOne({ email: email });\n    if (!user) {\n      res.status(401).json({\n        errorCode: 'E-mail not registered',\n        message: 'Invalid credentials',\n      });\n      return;\n    }\n\n    if (!bcrypt.compareSync(password, user.password)) {\n      res.status(401).json({\n        errorCode: 'Incorrect Password',\n        message: 'Invalid credentials',\n      });\n      return;\n    }\n\n    res.json({\n      id: user._id,\n      email: user.email,\n      password: user.password,\n      accessToken: user.accessToken,\n    });\n  } catch (error) {\n    res\n      .status(400)\n      .json({ errorCode: 'uknown-error', message: 'Invalid request', error });\n  }\n});\n\n//Just for development\napp.get('/users', async (req, res) => {\n  const users = await User.find();\n  res.json(users);\n});\n\n// Start the server\napp.listen(port, () => {\n  // eslint-disable-next-line\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623917873220
  }
}