{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { batch } from 'react-redux';\nimport { API_URL } from 'reusable/urls';\nconst initialState = localStorage.getItem('user') ? {\n  email: JSON.parse(localStorage.getItem('user')).email,\n  accessToken: JSON.parse(localStorage.getItem('user')).accessToken,\n  errors: null,\n  signUpSuccess: false\n} : {\n  email: null,\n  accessToken: null,\n  errors: null,\n  signUpSuccess: false\n};\nexport const user = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setEmail: (store, action) => {\n      store.email = action.payload;\n    },\n    setAccessToken: (store, action) => {\n      store.accessToken = action.payload;\n    },\n    setErrors: (store, action) => {\n      console.log(action);\n      store.errors = action.payload;\n    },\n    setLogOut: () => {\n      return {\n        email: null,\n        accessToken: null,\n        errors: null,\n        signUpSuccess: false\n      };\n    },\n    setSignUpSuccess: (store, action) => {\n      store.signUpSuccess = action.payload;\n    }\n  }\n});\n\nconst options = (email, password) => {\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  };\n}; // Signup fetch\n\n\nexport const fetchSignUp = (email, password) => {\n  return (dispatch, getState) => {\n    fetch(API_URL('signup'), options(email, password)).then(res => {\n      if (!res.ok) {\n        throw res;\n      }\n\n      return res.json();\n    }).then(data => {\n      batch(() => {\n        dispatch(user.actions.setEmail(data.email));\n        dispatch(user.actions.setAccessToken(data.accessToken));\n        dispatch(user.actions.setSignUpSuccess(true)); // dispatch(user.actions.setSignUpSuccess(false));\n      });\n      localStorage.setItem('user', JSON.stringify({\n        email: data.email,\n        accessToken: data.accessToken\n      }));\n    }).catch(error => {\n      error.json().then(errorData => {\n        dispatch(user.actions.setErrors(errorData));\n      });\n    });\n  };\n}; //Login fetch\n\nexport const fetchLogIn = (email, password) => {\n  return (dispatch, getState) => {\n    fetch(API_URL('login'), options(email, password)).then(res => {\n      if (!res.ok) {\n        throw res;\n      }\n\n      return res.json();\n    }).then(data => {\n      batch(() => {\n        dispatch(user.actions.setEmail(data.email));\n        dispatch(user.actions.setAccessToken(data.accessToken));\n        dispatch(user.actions.setErrors(null));\n      });\n      localStorage.setItem('user', JSON.stringify({\n        email: data.email,\n        accessToken: data.accessToken\n      }));\n    }).catch(error => {\n      error.json().then(errorData => {\n        dispatch(user.actions.setErrors(errorData));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mm/Development/technigo/final-project/final-project/frontend/src/reducers/user.js"],"names":["createSlice","batch","API_URL","initialState","localStorage","getItem","email","JSON","parse","accessToken","errors","signUpSuccess","user","name","reducers","setEmail","store","action","payload","setAccessToken","setErrors","console","log","setLogOut","setSignUpSuccess","options","password","method","headers","body","stringify","fetchSignUp","dispatch","getState","fetch","then","res","ok","json","data","actions","setItem","catch","error","errorData","fetchLogIn"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { batch } from 'react-redux';\n\nimport { API_URL } from 'reusable/urls';\n\nconst initialState = localStorage.getItem('user')\n  ? {\n      email: JSON.parse(localStorage.getItem('user')).email,\n      accessToken: JSON.parse(localStorage.getItem('user')).accessToken,\n      errors: null,\n      signUpSuccess: false,\n    }\n  : {\n      email: null,\n      accessToken: null,\n      errors: null,\n      signUpSuccess: false,\n    };\n\nexport const user = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setEmail: (store, action) => {\n      store.email = action.payload;\n    },\n    setAccessToken: (store, action) => {\n      store.accessToken = action.payload;\n    },\n    setErrors: (store, action) => {\n      console.log(action);\n      store.errors = action.payload;\n    },\n    setLogOut: () => {\n      return {\n        email: null,\n        accessToken: null,\n        errors: null,\n        signUpSuccess: false\n      };\n    },\n    setSignUpSuccess: (store, action) => {\n      store.signUpSuccess = action.payload;\n    },\n  },\n});\n\nconst options = (email, password) => {\n  return {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email: email, password: password }),\n  };\n};\n\n// Signup fetch\nexport const fetchSignUp = (email, password) => {\n  return (dispatch, getState) => {\n    fetch(API_URL('signup'), options(email, password))\n      .then((res) => {\n        if (!res.ok) {\n          throw res;\n        }\n        return res.json();\n      })\n      .then((data) => {\n        batch(() => {\n          dispatch(user.actions.setEmail(data.email));\n          dispatch(user.actions.setAccessToken(data.accessToken));\n          dispatch(user.actions.setSignUpSuccess(true));\n          // dispatch(user.actions.setSignUpSuccess(false));\n        });\n\n        localStorage.setItem(\n          'user',\n          JSON.stringify({\n            email: data.email,\n            accessToken: data.accessToken,\n          })\n        );\n      })\n      .catch((error) => {\n        error.json().then((errorData) => {\n          dispatch(user.actions.setErrors(errorData));\n        });\n      });\n  };\n};\n\n//Login fetch\nexport const fetchLogIn = (email, password) => {\n  return (dispatch, getState) => {\n    fetch(API_URL('login'), options(email, password))\n      .then((res) => {\n        if (!res.ok) {\n          throw res;\n        }\n        return res.json();\n      })\n      .then((data) => {\n        batch(() => {\n          dispatch(user.actions.setEmail(data.email));\n          dispatch(user.actions.setAccessToken(data.accessToken));\n          dispatch(user.actions.setErrors(null));\n        });\n\n        localStorage.setItem(\n          'user',\n          JSON.stringify({\n            email: data.email,\n            accessToken: data.accessToken,\n          })\n        );\n      })\n      .catch((error) => {\n        error.json().then((errorData) => {\n          dispatch(user.actions.setErrors(errorData));\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}